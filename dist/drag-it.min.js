/**
 * Free to drag the HTML element to any place üç≠
 *
 * DragIt v1.1.6
 * https://github.com/Alex-xd/drag-it
 *
 * Copyright 2017 Alex-xd
 * Released under the MIT license
 */
!function(a){var b=!1;if("function"==typeof define&&define.amd&&(define(a),b=!0),"object"==typeof exports&&(module.exports=a(),b=!0),!b){var c=window.Dragger,d=window.Dragger=a();d.noConflict=function(){return window.Dragger=c,d}}}(function(){"use strict";function a(a){var b={hasBoundary:!1,container:document.documentElement,overflowLeft:0,overflowRight:0,overflowTop:0,overflowBottom:0};if(this.options=Object.assign({},b,a),this.dragger=null,this.mover=null,this.isDragging=!1,this.diffX=0,this.diffY=0,this.MAX_X=0,this.MAX_Y=0,this.moverStyle=null,this.marginLeft=0,this.marginTop=0,this.hasDraggableAttr=!1,this.options.hasBoundary){var c=!1,d=this;window.addEventListener("resize",function(){c||(c=!0,window.requestAnimationFrame?window.requestAnimationFrame(function(){d.resetMAX(d.options.container),c=!1}):setTimeout(function(){d.resetMAX(d.options.container),c=!1},66))})}}return a.prototype.draggable=function(a,b){0===arguments.length&&console.error("[drag-it]: Need at least one param! Please declare a dragger"),this.mover=b||a,this.dragger=a,this.moverStyle=window.getComputedStyle(this.mover),this.marginLeft=Number(this.moverStyle.marginLeft.split("px")[0]),this.marginTop=Number(this.moverStyle.marginTop.split("px")[0]),this.mover.style.right="initial",this.mover.style.bottom="initial","true"===this.mover.getAttribute("draggable")&&(this.hasDraggableAttr=!0,console.warn("[drag-it]: In order to make the drag working, attribute 'draggable' was temporarily removed during the dragging, then it will be back.")),"absolute"!==this.moverStyle.position&&"fixed"!==this.moverStyle.position&&(this.mover.style.position="fixed",console.warn('[drag-it]: the position attribute of mover is "'+this.moverStyle.position+'", in order to move it, position attribute has been changed to "fixed"')),this.resetMAX(this.options.container),this.dragger.addEventListener("mousedown",this.onmousedown.bind(this),!1),this.dragger.addEventListener("touchstart",this.onmousedown.bind(this),!1),document.addEventListener("mousemove",this.onmousemove.bind(this),!1),document.addEventListener("touchmove",this.onmousemove.bind(this),!1),document.addEventListener("mouseup",this.onmouseup.bind(this),!1),document.addEventListener("touchend",this.onmouseup.bind(this),!1)},a.prototype.onmousedown=function(a){var b=a.clientX,c=a.clientY;"touchstart"===a.type&&(a.preventDefault(),b=a.touches[0].clientX,c=a.touches[0].clientY),this.hasDraggableAttr&&this.mover.removeAttribute("draggable"),this.diffX=b-this.mover.offsetLeft,this.diffY=c-this.mover.offsetTop,this.isDragging=!0},a.prototype.onmousemove=function(a){if(this.isDragging){var b=a.clientX,c=a.clientY,d=0,e=0;"touchmove"===a.type&&(b=a.touches[0].clientX,c=a.touches[0].clientY),this.options.hasBoundary?(d=Math.max(-this.options.overflowLeft-this.marginLeft,Math.min(b-this.diffX-this.marginLeft,this.MAX_X))+"px",e=Math.max(-this.options.overflowTop-this.marginTop,Math.min(c-this.diffY-this.marginTop,this.MAX_Y))+"px"):(d=b-this.diffX-this.marginLeft+"px",e=c-this.diffY-this.marginTop+"px"),this.mover.style.left=d,this.mover.style.top=e}},a.prototype.onmouseup=function(){this.isDragging&&(this.hasDraggableAttr&&this.mover.setAttribute("draggable","true"),this.isDragging=!1)},a.prototype.resetMAX=function(a){a||(a=document.documentElement),this.MAX_X=a.clientWidth-this.mover.clientWidth-this.marginLeft+this.options.overflowRight,this.MAX_Y=a.clientHeight-this.mover.clientHeight-this.marginTop+this.options.overflowBottom},a});
